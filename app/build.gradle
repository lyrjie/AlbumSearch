apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    buildFeatures {
        dataBinding true
    }

    kotlinOptions { jvmTarget = "1.8" }

    defaultConfig {
        applicationId "com.example.albumsearch"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"

    // AndroidX
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    implementation "androidx.legacy:legacy-support-v4:$versions.legacy_support"
    implementation "androidx.fragment:fragment-ktx:$versions.fragment"

    // Moshi for JSON parsing
    implementation "com.squareup.moshi:moshi:$versions.moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    implementation "com.squareup.moshi:moshi-adapters:$versions.moshi"
    implementation 'com.google.android.material:material:1.2.1'
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"

    // Retrofit for network calls
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$versions.recycler_view"

    // Kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines_core"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines_android"

    // Glide for idiomatic image loading
    implementation "com.github.bumptech.glide:glide:$versions.glide"

    // Hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-android-compiler:$versions.hilt"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hilt_lifecycle"
    kapt "androidx.hilt:hilt-compiler:$versions.hilt_lifecycle"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$versions.hilt_assisted_inject"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$versions.hilt_assisted_inject"

    // Room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    implementation "androidx.room:room-ktx:$versions.room"

    testImplementation 'junit:junit:4.13'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}